#
# My custom prompt.
#

function prompt_yasserglez_precmd {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
  fi

  # Get Python information.
  if (( $+functions[python-info] )); then
    python-info
  fi
}

function prompt_yasserglez_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling {git,python}-info before each command.
  add-zsh-hook precmd prompt_yasserglez_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:keymap:primary' format '>>>'
  zstyle ':prezto:module:editor:info:keymap:primary:insert' format 'I'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format 'O'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '<<<'
  zstyle ':prezto:module:editor:info:completing' format '...'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info:branch' format '%Ugit%u:%b'
  zstyle ':prezto:module:git:info:keys' format 'branch' ' %b'

  # Set python-info parameters.
  zstyle ':prezto:module:python:info:virtualenv' format ' %Uvirtualenv%u:%v'

  # Define prompts.
  PROMPT=$'\n%U%m%u:%~$git_info[branch]$python_info[virtualenv]\n${editor_info[keymap]} '
  RPROMPT=''
  SPROMPT=" -- correct '%R' to '%r' [nyae]? "
  PROMPT2='... '

  # Completions.
  zstyle ':completion:*:corrections' format ' -- %d'
  zstyle ':completion:*:descriptions' format ' -- %d'
  zstyle ':completion:*:messages' format ' -- %d'
  zstyle ':completion:*:warnings' format ' -- no matches found'
  zstyle ':completion:*' format ' -- %d'
}

# Keeping this over here to easily match the style used in SPROMPT and completions.
function command_not_found_handler() {
  echo " -- command not found: $1 $2"
}

prompt_yasserglez_setup "$@"
