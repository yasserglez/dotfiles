#!/usr/bin/env python

import os
import shutil
import argparse

import sqlite3


QUERY = """
SELECT file FROM
  media_parts
  LEFT OUTER JOIN media_items on media_items.id = media_parts.media_item_id
  LEFT OUTER JOIN play_queue_generators on play_queue_generators.metadata_item_id = media_items.metadata_item_id
  LEFT OUTER JOIN metadata_items on metadata_items.id = play_queue_generators.playlist_id WHERE metadata_items.title = ?
"""


def export_plex_playlist(plex_db, plex_playlist, music_dir, output_dir):

    cursor = sqlite3.connect(plex_db).cursor()
    music_files = []
    for row in cursor.execute(QUERY, (plex_playlist,)):
        music_files.append(row[0])

    prefix = os.path.commonprefix(music_files)
    for file in music_files:
        base_name = file[len(prefix):]
        orig_file = os.path.join(music_dir, base_name)
        if os.path.isfile(orig_file):
            dest_file = os.path.join(os.path.expanduser(output_dir), base_name)
            dest_dir = os.path.dirname(dest_file)
            if not os.path.isdir(dest_dir):
                os.makedirs(dest_dir)
            shutil.copy(orig_file, dest_file)


def main():
    parser = argparse.ArgumentParser(description='Export files from a Plex playlist.')
    parser.add_argument('--plex-db', metavar='PATH', required=True)
    parser.add_argument('--plex-playlist', metavar='NAME', required=True)
    parser.add_argument('--music-dir', metavar='PATH', required=True)
    parser.add_argument('--output-dir', metavar='PATH', required=True)
    args = parser.parse_args()
    export_plex_playlist(args.plex_db, args.plex_playlist, args.music_dir, args.output_dir)


if __name__ == '__main__':
    main()
