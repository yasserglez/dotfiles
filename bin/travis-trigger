#!/usr/bin/env python

# Add a cron task to be run every day
# 0 21 * * * ~/.local/bin/travis-trigger --travis-token TOKEN

import argparse
import collections
import datetime

from travispy import TravisPy
from dateutil.parser import parse


FREQUENCIES = collections.OrderedDict([
    ('DAILY', 24),
    ('WEEKLY', 7 * 24),
    ('MONTHLY', 30 * 24),
    ('YEARLY', 365 * 24),
])
for k, v in FREQUENCIES.items():
    FREQUENCIES[k] = datetime.timedelta(hours=v)


def trigger_builds(frequency, travis_token=None, github_token=None):
    t = TravisPy(travis_token) if travis_token else TravisPy.github_auth(github_token)
    for repo in (r for r in t.repos(member=t.user().login) if r.active):
        last_build_finished_at = parse(repo.last_build_finished_at)
        tzinfo = last_build_finished_at.tzinfo
        time_since_last_build = datetime.datetime.now(tzinfo) - last_build_finished_at
        if time_since_last_build >= frequency:
            repo.last_build.restart()


def main():
    parser = argparse.ArgumentParser(description='Trigger periodic Travis CI builds.')
    tokens = parser.add_mutually_exclusive_group(required=True)
    tokens.add_argument('--travis-token', metavar='TOKEN', default=None,
                        help='Travis CI authentication token')
    tokens.add_argument('--github-token', metavar='TOKEN', default=None,
                        help='GitHub authentication token')
    parser.add_argument('--frequency', choices=FREQUENCIES.keys(), default='MONTHLY',
                        help='build frequency (default: %(default)s)')
    args = parser.parse_args()
    trigger_builds(FREQUENCIES[args.frequency],
                   args.travis_token, args.github_token)


if __name__ == '__main__':
    main()
